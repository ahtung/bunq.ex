# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Bunq.Model.TransferwiseTransfer do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"monetary_account_id",
    :"recipient_id",
    :"alias",
    :"counterparty_alias",
    :"status",
    :"sub_status",
    :"status_transferwise",
    :"status_transferwise_issue",
    :"amount_source",
    :"amount_target",
    :"rate",
    :"reference",
    :"pay_in_reference",
    :"time_delivery_estimate",
    :"quote"
  ]

  @type t :: %__MODULE__{
    :"monetary_account_id" => String.t,
    :"recipient_id" => String.t,
    :"alias" => LabelMonetaryAccount | nil,
    :"counterparty_alias" => LabelMonetaryAccount | nil,
    :"status" => String.t | nil,
    :"sub_status" => String.t | nil,
    :"status_transferwise" => String.t | nil,
    :"status_transferwise_issue" => String.t | nil,
    :"amount_source" => Amount | nil,
    :"amount_target" => Amount | nil,
    :"rate" => String.t | nil,
    :"reference" => String.t | nil,
    :"pay_in_reference" => String.t | nil,
    :"time_delivery_estimate" => String.t | nil,
    :"quote" => TransferwiseQuote | nil
  }
end

defimpl Poison.Decoder, for: Bunq.Model.TransferwiseTransfer do
  import Bunq.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"alias", :struct, Bunq.Model.LabelMonetaryAccount, options)
    |> deserialize(:"counterparty_alias", :struct, Bunq.Model.LabelMonetaryAccount, options)
    |> deserialize(:"amount_source", :struct, Bunq.Model.Amount, options)
    |> deserialize(:"amount_target", :struct, Bunq.Model.Amount, options)
    |> deserialize(:"quote", :struct, Bunq.Model.TransferwiseQuote, options)
  end
end

