# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Bunq.Model.ShareInviteBankInquiry do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"counter_user_alias",
    :"draft_share_invite_bank_id",
    :"share_detail",
    :"status",
    :"share_type",
    :"start_date",
    :"end_date",
    :"alias",
    :"user_alias_created",
    :"user_alias_revoked",
    :"monetary_account_id",
    :"id"
  ]

  @type t :: %__MODULE__{
    :"counter_user_alias" => LabelUser | nil,
    :"draft_share_invite_bank_id" => integer() | nil,
    :"share_detail" => ShareDetail | nil,
    :"status" => String.t | nil,
    :"share_type" => String.t | nil,
    :"start_date" => String.t | nil,
    :"end_date" => String.t | nil,
    :"alias" => LabelMonetaryAccount | nil,
    :"user_alias_created" => LabelUser | nil,
    :"user_alias_revoked" => LabelUser | nil,
    :"monetary_account_id" => integer() | nil,
    :"id" => integer() | nil
  }
end

defimpl Poison.Decoder, for: Bunq.Model.ShareInviteBankInquiry do
  import Bunq.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"counter_user_alias", :struct, Bunq.Model.LabelUser, options)
    |> deserialize(:"share_detail", :struct, Bunq.Model.ShareDetail, options)
    |> deserialize(:"alias", :struct, Bunq.Model.LabelMonetaryAccount, options)
    |> deserialize(:"user_alias_created", :struct, Bunq.Model.LabelUser, options)
    |> deserialize(:"user_alias_revoked", :struct, Bunq.Model.LabelUser, options)
  end
end

